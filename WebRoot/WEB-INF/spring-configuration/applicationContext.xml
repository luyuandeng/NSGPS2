<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       	http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/mvc    
    	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        ">
    <description>
       NSGPS
    </description>
    <mvc:annotation-driven />  
    <context:component-scan base-package="com.gzeport.app.gps.controller" />
    
	 <bean id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource">
			<property name="driverClassName"
				value="oracle.jdbc.driver.OracleDriver">
			</property>
			<property name="url" value="jdbc:oracle:thin:@192.168.111.238:1521:testdata"></property>
<!--<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>-->
<!-- 			<property name="url" value="jdbc:oracle:thin:@172.16.2.124:1521:orcl"></property> -->
			<property name="username" value="portal"></property>
			<property name="password" value="portal"></property>
		</bean>
		
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
			<property name="dataSource">
				<ref bean="dataSource" />
			</property>
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">
						org.hibernate.dialect.Oracle9Dialect
					</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.jdbc.batch_size">100</prop>
					<prop key="hiberante.cache.use_second_level_cache">true</prop>
<!-- 					<prop key="hibernate.hbm2ddl.auto">update</prop> -->
				</props>
			</property>
			<property name="mappingResources">
				<list>
 					<value>com/gzeport/app/gps/pojo/VehicIeInfo.hbm.xml</value> 
				</list>
			</property>
			
			<property name="packagesToScan">
				<list><value>com.gzeport.app.gps.pojo</value></list>
			</property>
		</bean>
		
		<!-- 配置事务管理器bean,使用HibernateTransactionManager事务管理器 -->
		<tx:annotation-driven transaction-manager="txMgr" />
		<bean id="txMgr"
			class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<!-- 为事务管理器注入sessionFactory" -->
			<property name="sessionFactory" ref="sessionFactory" />
		</bean>
	
		<!-- 配置事务拦截器Bean -->
		<bean id="transactionInterceptor"
			class="org.springframework.transaction.interceptor.TransactionInterceptor">
			<!-- 为事务拦截器bean注入一个事物管理器 -->
			<property name="transactionManager" ref="txMgr"></property>
			<property name="transactionAttributes">
				<!-- 定义事务传播属性 -->
				<props>
					<prop key="insert*">PROPAGATION_REQUIRED</prop>
					<prop key="update*">PROPAGATION_REQUIRED</prop>
					<prop key="save*">PROPAGATION_REQUIRED</prop>
					<prop key="add*">PROPAGATION_REQUIRED</prop>
					<prop key="remove*">PROPAGATION_REQUIRED</prop>
					<prop key="delete*">PROPAGATION_REQUIRED</prop>
					<prop key="get*">PROPAGATION_REQUIRED</prop>
					<prop key="find*">PROPAGATION_REQUIRED</prop>
					<prop key="load*">PROPAGATION_REQUIRED</prop>
					<prop key="change*">PROPAGATION_REQUIRED</prop>
					<prop key="void*">PROPAGATION_REQUIRED</prop>
					<prop key="*">PROPAGATION_REQUIRED</prop>
				</props>
			</property>
		</bean>
		<!-- 事务配置 -->
		<!-- 定义BeanNameAutoProxyCreator -->
		<bean
			class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
			<!-- 指定满足哪些bean自动生成业务代理 -->
			<property name="beanNames">
				<!-- 需要自动创建事务代理的bean -->
				<list>
					<value>*Manager</value>
				</list>
				<!-- 其它需要自动创建事务代理的bean -->
			</property>
			<property name="interceptorNames">
				<list>
					<value>transactionInterceptor</value>
					<!-- 可增加其它的interceptor -->
				</list>
			</property>
		</bean>
		
<!-- 	<bean class="com.gzeport.app.gps.util.SpringContextHolder" lazy-init="false" />	-->
 	
<!-- 	<bean id="shipDataStore" class="com.gzeport.app.gps.thread.ShipDataStore"  scope="singleton" />	-->
 	
	 	
	 <!--Quartz -->
	<!-- 调度获取数据 -->
	<!--  
	<bean id="getDwrGpsHelperJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="dwrVehicleInfoService"
		p:targetMethod="perform" />
	
	<bean id="triggergetGpsShipDataCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean"
		p:jobDetail-ref="getDwrGpsHelperJobDetail"
		p:startDelay="200"
		p:repeatInterval="150000" />

	<bean id="getDwrGpsHelperJobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="dwrGpsHelper"
		p:targetMethod="addMessage" />	-->
	
<!--	<bean id="triggergetGpsShipDataCleaner2" class="org.springframework.scheduling.quartz.SimpleTriggerBean"-->
<!--	<bean id="triggergetGpsShipDataCleaner2" class="org.springframework.scheduling.quartz.CronTriggerBean"
		p:jobDetail-ref="getDwrGpsHelperJobDetail2" 
		p:cronExpression ="0 0/1 * * * ?"/>

1．秒（0–59）2．分钟（0–59）3．小时（0–23）4．月份中的日期（1–31）5．月份（1–12或JAN–DEC） 6．星期中的日期（1–7或SUN–SAT）
-->
	
	
	<bean id="gpsProcessJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"
		p:targetObject-ref="pollingCarGpsJobDetail"
		p:targetMethod="pollingCarGpsData" />
	
		<bean id="triggergetGpsProcessCleaner" class="org.springframework.scheduling.quartz.SimpleTriggerBean"
		p:jobDetail-ref="gpsProcessJobDetail"
		p:startDelay="200"
		p:repeatInterval="1000" />
		
	<!-- Spring触发工厂 -->  
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
       <property name="triggers">  
            <list>  
         		<ref bean="triggergetGpsProcessCleaner"/>
             <!--      <ref bean="triggergetGpsShipDataCleaner2"/>   -->
               <!-- ....下面可以继续添加其他触发器 -->  
           </list>  
      </property>  
    </bean>  
		
		
</beans>
